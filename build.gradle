plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // querydsl-jpa
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.0'


    //	Dto vs entity
    implementation 'org.modelmapper:modelmapper:3.1.1'


    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.1'

<<<<<<< HEAD:wanted-pre-onboarding-backend/build.gradle
//   바인딩게 됨
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
=======
//    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
//    implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.1.2'

>>>>>>> 365d2d9dcc418522926789802695e8665737de00:build.gradle

}

tasks.named('test') {
    useJUnitPlatform()
}

/// 컴파일될떄 실행되는 로직들
// queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = 'src/main/generated'

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

